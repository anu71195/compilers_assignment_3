Terminals unused in grammar

   GET_FLOPS_SPEED
   INVALID


State 38 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 60 conflicts: 3 shift/reduce
State 63 conflicts: 2 shift/reduce


Grammar

    0 $accept: Start $end

    1 Start: Function_declaration Start
    2      | Object_declaration Start
    3      | Function_declaration
    4      | Object_declaration

    5 Object_declaration: Dec_specifier IDENTIFIER ASGN_OP postfix_expression SEMI_COLON
    6                   | Dec_specifier IDENTIFIER ASGN_OP object_expression SEMI_COLON
    7                   | Dec_specifier IDENTIFIER SEMI_COLON
    8                   | Dec_specifier array_expression ASGN_OP array_initialiser SEMI_COLON
    9                   | Dec_specifier array_expression SEMI_COLON

   10 Dec_specifier: type_specifier pointer
   11              | type_specifier

   12 array_initialiser: LEFT_CURLY array_initialiser RIGHT_CURLY
   13                  | LEFT_CURLY array_initialiser RIGHT_CURLY COMMA array_initialiser
   14                  | expression

   15 Function_declaration: Dec_specifier IDENTIFIER LEFT_PARENTHESIS argument_list RIGHT_PARENTHESIS body_or_proto
   16                     | Dec_specifier IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS body_or_proto

   17 body_or_proto: LEFT_CURLY statement_list RIGHT_CURLY
   18              | SEMI_COLON

   19 argument_list: Dec_specifier IDENTIFIER COMMA argument_list
   20              | Dec_specifier IDENTIFIER

   21 type_specifier: INT
   22               | VOID
   23               | FLOAT
   24               | CHAR
   25               | PROC
   26               | CLUST
   27               | JB
   28               | MEM
   29               | LNK

   30 pointer: MUL_OP pointer
   31        | MUL_OP

   32 statement_list: Statement statement_list
   33               | Statement

   34 Statement: LEFT_CURLY statement_list RIGHT_CURLY
   35          | Expression_statement
   36          | Selection_statement
   37          | Iteration_statement
   38          | Jump_statement
   39          | Object_declaration

   40 Jump_statement: RETURN expression
   41               | CONTINUE SEMI_COLON
   42               | BREAK SEMI_COLON

   43 Selection_statement: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY ELSE LEFT_CURLY statement_list RIGHT_CURLY
   44                    | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY

   45 Iteration_statement: WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS Statement
   46                    | FOR LEFT_PARENTHESIS Expression_statement Expression_statement RIGHT_PARENTHESIS Statement
   47                    | FOR LEFT_PARENTHESIS Expression_statement Expression_statement expression RIGHT_PARENTHESIS Statement

   48 Expression_statement: expression SEMI_COLON
   49                     | SEMI_COLON

   50 expression: assignment_expression
   51           | assignment_expression COMMA expression

   52 assignment_expression: unary_expression ASGN_OP assignment_expression
   53                      | conditional_expression
   54                      | object_expression

   55 conditional_expression: logical_or_expression

   56 logical_or_expression: logical_and_expression OR_OP logical_or_expression
   57                      | logical_and_expression

   58 logical_and_expression: bitwise_or_expression AND_OP logical_and_expression
   59                       | bitwise_or_expression

   60 bitwise_or_expression: bitwise_xor_expression BTW_OR bitwise_or_expression
   61                      | bitwise_xor_expression

   62 bitwise_xor_expression: and_expression
   63                       | and_expression XOR_OP bitwise_xor_expression

   64 and_expression: equality_expression
   65               | equality_expression AMPERSAND and_expression

   66 equality_expression: relational_expression
   67                    | relational_expression EQ_OP equality_expression
   68                    | relational_expression NE_OP equality_expression

   69 relational_expression: shift_expression
   70                      | shift_expression LESS_THAN relational_expression
   71                      | shift_expression GREATER_THAN relational_expression
   72                      | shift_expression LE_OP relational_expression
   73                      | shift_expression GE_OP relational_expression

   74 shift_expression: additive_expression
   75                 | additive_expression LEFT_OP shift_expression
   76                 | additive_expression RIGHT_OP shift_expression

   77 additive_expression: multiplicative_expression
   78                    | multiplicative_expression PLUS additive_expression
   79                    | multiplicative_expression MINUS additive_expression

   80 multiplicative_expression: unary_expression
   81                          | multiplicative_expression MUL_OP unary_expression
   82                          | multiplicative_expression DIV_OP unary_expression
   83                          | multiplicative_expression MOD_OP unary_expression

   84 unary_expression: postfix_expression
   85                 | INC_OP unary_expression
   86                 | DEC_OP unary_expression
   87                 | unary_operator unary_expression

   88 unary_operator: PLUS
   89               | MINUS
   90               | BTW_NOT
   91               | NOT_OP
   92               | MUL_OP
   93               | AMPERSAND

   94 postfix_expression: primary_expression
   95                   | array_expression
   96                   | function_expression
   97                   | postfix_expression INC_OP
   98                   | postfix_expression DEC_OP

   99 array_expression: array_expression LEFT_BRACKET expression RIGHT_BRACKET
  100                 | primary_expression LEFT_BRACKET expression RIGHT_BRACKET

  101 primary_expression: IDENTIFIER DEREF_OP IDENTIFIER
  102                   | IDENTIFIER
  103                   | CONSTANT
  104                   | STRING_LITERAL
  105                   | LEFT_PARENTHESIS expression RIGHT_PARENTHESIS

  106 object_expression: link_object
  107                  | memory_object
  108                  | job_object
  109                  | cluster_object

  110 cluster_object: CLUSTER LEFT_PARENTHESIS proc_arr_arg COMMA topology_arg COMMA link_band_arg COMMA link_cap_arg narp
  111               | processor_object

  112 proc_arr_arg: PROCESSORS ASGN_OP IDENTIFIER
  113             | PROCESSORS ASGN_OP LEFT_BRACKET cluster_list RIGHT_BRACKET
  114             | IDENTIFIER
  115             | LEFT_BRACKET cluster_list RIGHT_BRACKET

  116 cluster_list: cluster_object COMMA cluster_list
  117             | cluster_object

  118 topology_arg: TOPOLOGY ASGN_OP STRING_LITERAL
  119             | STRING_LITERAL

  120 link_band_arg: LINK_BANDWIDTH ASGN_OP conditional_expression
  121              | conditional_expression

  122 link_cap_arg: LINK_CAPACITY ASGN_OP conditional_expression
  123             | conditional_expression

  124 narp: COMMA conditional_expression RIGHT_PARENTHESIS
  125     | COMMA NAME ASGN_OP conditional_expression RIGHT_PARENTHESIS
  126     | RIGHT_PARENTHESIS

  127 processor_object: PROCESSOR LEFT_PARENTHESIS isa_args COMMA Clock_args COMMA mem_args narp

  128 isa_args: ISA ASGN_OP PROC_TYPE
  129         | PROC_TYPE

  130 Clock_args: CLOCK_SPEED ASGN_OP CONSTANT
  131           | CONSTANT

  132 mem_args: MEM1 ASGN_OP memory COLON MEM2 ASGN_OP memory
  133         | MEM1 ASGN_OP memory COLON memory
  134         | MEM1 ASGN_OP memory
  135         | memory COLON MEM2 ASGN_OP memory
  136         | memory COLON memory
  137         | memory

  138 memory: memory_object
  139       | IDENTIFIER

  140 link_object: LINK LEFT_PARENTHESIS start_args COMMA end_args COMMA link_band_arg COMMA link_cap_arg narp

  141 start_args: START_POINT ASGN_OP conditional_expression
  142           | conditional_expression

  143 end_args: END_POINT ASGN_OP conditional_expression
  144         | conditional_expression

  145 memory_object: MEMORY LEFT_PARENTHESIS mem_type_args COMMA mem_size_args narp

  146 mem_type_args: MEMORY_TYPE ASGN_OP MEM_TYPES
  147              | MEM_TYPES

  148 mem_size_args: MEMORY_SIZE ASGN_OP conditional_expression
  149              | conditional_expression

  150 job_object: JOB LEFT_PARENTHESIS job_id_args COMMA flops_args COMMA deadline_args COMMA mem_required_args COMMA affinity_args RIGHT_PARENTHESIS

  151 job_id_args: JOB_ID ASGN_OP conditional_expression
  152            | conditional_expression

  153 flops_args: FLOPS_REQUIRED ASGN_OP conditional_expression
  154           | conditional_expression

  155 deadline_args: DEADLINE ASGN_OP conditional_expression
  156              | conditional_expression

  157 mem_required_args: MEM_REQUIRED ASGN_OP conditional_expression
  158                  | conditional_expression

  159 affinity_args: AFFINITY ASGN_OP LEFT_BRACKET list RIGHT_BRACKET
  160              | LEFT_BRACKET list RIGHT_BRACKET

  161 list: CONSTANT
  162     | CONSTANT COMMA list

  163 function_expression: RUN LEFT_PARENTHESIS cluster_list RIGHT_PARENTHESIS
  164                    | WAIT LEFT_PARENTHESIS RIGHT_PARENTHESIS
  165                    | DISCARD_JOB LEFT_PARENTHESIS job_list RIGHT_PARENTHESIS
  166                    | STOP LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS
  167                    | IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
  168                    | IDENTIFIER LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
  169                    | IDENTIFIER DOT object_function

  170 object_function: processor_function
  171                | job_function
  172                | memory_function
  173                | cluster_function

  174 memory_function: GET_AVAILABLE_MEMORY LEFT_PARENTHESIS RIGHT_PARENTHESIS

  175 job_function: GET_JOB_AFFINITY LEFT_PARENTHESIS RIGHT_PARENTHESIS
  176             | GET_JOB_MEMORY LEFT_PARENTHESIS RIGHT_PARENTHESIS
  177             | GET_FLOPS LEFT_PARENTHESIS RIGHT_PARENTHESIS
  178             | GET_DEADLINE LEFT_PARENTHESIS RIGHT_PARENTHESIS

  179 processor_function: IS_RUNNING LEFT_PARENTHESIS RIGHT_PARENTHESIS
  180                   | SUBMIT_JOBS LEFT_PARENTHESIS job_list RIGHT_PARENTHESIS
  181                   | GET_CLOCK_SPEED LEFT_PARENTHESIS RIGHT_PARENTHESIS
  182                   | GET_PROC_TYPE LEFT_PARENTHESIS RIGHT_PARENTHESIS
  183                   | IS_PROCESSOR LEFT_PARENTHESIS RIGHT_PARENTHESIS

  184 cluster_function: GET_PROCESSOR LEFT_PARENTHESIS RIGHT_PARENTHESIS
  185                 | GET_PROCESSOR LEFT_PARENTHESIS primary_expression RIGHT_PARENTHESIS

  186 job_list: IDENTIFIER COMMA job_list
  187         | IDENTIFIER
  188         | job_object COMMA job_list
  189         | job_object


Terminals, with rules where they appear

$end (0) 0
error (256)
BREAK (258) 42
CHAR (259) 24
CONTINUE (260) 41
ELSE (261) 43
FLOAT (262) 23
FOR (263) 46 47
IF (264) 43 44
INT (265) 21
RETURN (266) 40
VOID (267) 22
WHILE (268) 45
PROC (269) 25
LNK (270) 29
JB (271) 27
COLON (272) 132 133 135 136
CLUST (273) 26
CLUSTER (274) 110
PROCESSOR (275) 127
ISA (276) 128
PROC_TYPE (277) 128 129
CLOCK_SPEED (278) 130
MEM1 (279) 132 133 134
MEM2 (280) 132 135
NAME (281) 125
TOPOLOGY (282) 118
LINK_BANDWIDTH (283) 120
LINK_CAPACITY (284) 122
LINK (285) 140
START_POINT (286) 141
END_POINT (287) 143
MEMORY_TYPE (288) 146
MEMORY_SIZE (289) 148
JOB (290) 150
JOB_ID (291) 151
FLOPS_REQUIRED (292) 153
DEADLINE (293) 155
MEM_REQUIRED (294) 157
AFFINITY (295) 159
RUN (296) 163
WAIT (297) 164
DISCARD_JOB (298) 165
STOP (299) 166
GET_AVAILABLE_MEMORY (300) 174
GET_JOB_AFFINITY (301) 175
GET_JOB_MEMORY (302) 176
GET_FLOPS (303) 177
GET_DEADLINE (304) 178
IS_RUNNING (305) 179
SUBMIT_JOBS (306) 180
GET_FLOPS_SPEED (307)
GET_PROC_TYPE (308) 182
IS_PROCESSOR (309) 183
GET_PROCESSOR (310) 184 185
MEM (311) 28
IDENTIFIER (312) 5 6 7 15 16 19 20 101 102 112 114 139 166 167 168
    169 186 187
CONSTANT (313) 103 130 131 161 162
STRING_LITERAL (314) 104 118 119
RIGHT_OP (315) 76
LEFT_OP (316) 75
INC_OP (317) 85 97
DEC_OP (318) 86 98
AND_OP (319) 58
OR_OP (320) 56
LE_OP (321) 72
GE_OP (322) 73
EQ_OP (323) 67
NE_OP (324) 68
SEMI_COLON (325) 5 6 7 8 9 18 41 42 48 49
LEFT_CURLY (326) 12 13 17 34 43 44
RIGHT_CURLY (327) 12 13 17 34 43 44
COMMA (328) 13 19 51 110 116 124 125 127 140 145 150 162 186 188
ASGN_OP (329) 5 6 8 52 112 113 118 120 122 125 128 130 132 133 134
    135 141 143 146 148 151 153 155 157 159
LEFT_PARENTHESIS (330) 15 16 43 44 45 46 47 105 110 127 140 145 150
    163 164 165 166 167 168 174 175 176 177 178 179 180 181 182 183
    184 185
RIGHT_PARENTHESIS (331) 15 16 43 44 45 46 47 105 124 125 126 150 163
    164 165 166 167 168 174 175 176 177 178 179 180 181 182 183 184
    185
LEFT_BRACKET (332) 99 100 113 115 159 160
RIGHT_BRACKET (333) 99 100 113 115 159 160
DOT (334) 169
AMPERSAND (335) 65 93
NOT_OP (336) 91
BTW_NOT (337) 90
MINUS (338) 79 89
PLUS (339) 78 88
MUL_OP (340) 30 31 81 92
DIV_OP (341) 82
MOD_OP (342) 83
LESS_THAN (343) 70
GREATER_THAN (344) 71
XOR_OP (345) 63
BTW_OR (346) 60
INVALID (347)
MEMORY (348) 145
PROCESSORS (349) 112 113
DEREF_OP (350) 101
GET_CLOCK_SPEED (351) 181
MEM_TYPES (352) 146 147


Nonterminals, with rules where they appear

$accept (98)
    on left: 0
Start (99)
    on left: 1 2 3 4, on right: 0 1 2
Object_declaration (100)
    on left: 5 6 7 8 9, on right: 2 4 39
Dec_specifier (101)
    on left: 10 11, on right: 5 6 7 8 9 15 16 19 20
array_initialiser (102)
    on left: 12 13 14, on right: 8 12 13
Function_declaration (103)
    on left: 15 16, on right: 1 3
body_or_proto (104)
    on left: 17 18, on right: 15 16
argument_list (105)
    on left: 19 20, on right: 15 19
type_specifier (106)
    on left: 21 22 23 24 25 26 27 28 29, on right: 10 11
pointer (107)
    on left: 30 31, on right: 10 30
statement_list (108)
    on left: 32 33, on right: 17 32 34 43 44
Statement (109)
    on left: 34 35 36 37 38 39, on right: 32 33 45 46 47
Jump_statement (110)
    on left: 40 41 42, on right: 38
Selection_statement (111)
    on left: 43 44, on right: 36
Iteration_statement (112)
    on left: 45 46 47, on right: 37
Expression_statement (113)
    on left: 48 49, on right: 35 46 47
expression (114)
    on left: 50 51, on right: 14 40 43 44 45 47 48 51 99 100 105 168
assignment_expression (115)
    on left: 52 53 54, on right: 50 51 52
conditional_expression (116)
    on left: 55, on right: 53 120 121 122 123 124 125 141 142 143 144
    148 149 151 152 153 154 155 156 157 158
logical_or_expression (117)
    on left: 56 57, on right: 55 56
logical_and_expression (118)
    on left: 58 59, on right: 56 57 58
bitwise_or_expression (119)
    on left: 60 61, on right: 58 59 60
bitwise_xor_expression (120)
    on left: 62 63, on right: 60 61 63
and_expression (121)
    on left: 64 65, on right: 62 63 65
equality_expression (122)
    on left: 66 67 68, on right: 64 65 67 68
relational_expression (123)
    on left: 69 70 71 72 73, on right: 66 67 68 70 71 72 73
shift_expression (124)
    on left: 74 75 76, on right: 69 70 71 72 73 75 76
additive_expression (125)
    on left: 77 78 79, on right: 74 75 76 78 79
multiplicative_expression (126)
    on left: 80 81 82 83, on right: 77 78 79 81 82 83
unary_expression (127)
    on left: 84 85 86 87, on right: 52 80 81 82 83 85 86 87
unary_operator (128)
    on left: 88 89 90 91 92 93, on right: 87
postfix_expression (129)
    on left: 94 95 96 97 98, on right: 5 84 97 98
array_expression (130)
    on left: 99 100, on right: 8 9 95 99
primary_expression (131)
    on left: 101 102 103 104 105, on right: 94 100 185
object_expression (132)
    on left: 106 107 108 109, on right: 6 54
cluster_object (133)
    on left: 110 111, on right: 109 116 117
proc_arr_arg (134)
    on left: 112 113 114 115, on right: 110
cluster_list (135)
    on left: 116 117, on right: 113 115 116 163
topology_arg (136)
    on left: 118 119, on right: 110
link_band_arg (137)
    on left: 120 121, on right: 110 140
link_cap_arg (138)
    on left: 122 123, on right: 110 140
narp (139)
    on left: 124 125 126, on right: 110 127 140 145
processor_object (140)
    on left: 127, on right: 111
isa_args (141)
    on left: 128 129, on right: 127
Clock_args (142)
    on left: 130 131, on right: 127
mem_args (143)
    on left: 132 133 134 135 136 137, on right: 127
memory (144)
    on left: 138 139, on right: 132 133 134 135 136 137
link_object (145)
    on left: 140, on right: 106
start_args (146)
    on left: 141 142, on right: 140
end_args (147)
    on left: 143 144, on right: 140
memory_object (148)
    on left: 145, on right: 107 138
mem_type_args (149)
    on left: 146 147, on right: 145
mem_size_args (150)
    on left: 148 149, on right: 145
job_object (151)
    on left: 150, on right: 108 188 189
job_id_args (152)
    on left: 151 152, on right: 150
flops_args (153)
    on left: 153 154, on right: 150
deadline_args (154)
    on left: 155 156, on right: 150
mem_required_args (155)
    on left: 157 158, on right: 150
affinity_args (156)
    on left: 159 160, on right: 150
list (157)
    on left: 161 162, on right: 159 160 162
function_expression (158)
    on left: 163 164 165 166 167 168 169, on right: 96
object_function (159)
    on left: 170 171 172 173, on right: 169
memory_function (160)
    on left: 174, on right: 172
job_function (161)
    on left: 175 176 177 178, on right: 171
processor_function (162)
    on left: 179 180 181 182 183, on right: 170
cluster_function (163)
    on left: 184 185, on right: 173
job_list (164)
    on left: 186 187 188 189, on right: 165 180 186 188


State 0

    0 $accept: . Start $end

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4
    PROC   shift, and go to state 5
    LNK    shift, and go to state 6
    JB     shift, and go to state 7
    CLUST  shift, and go to state 8
    MEM    shift, and go to state 9

    Start                 go to state 10
    Object_declaration    go to state 11
    Dec_specifier         go to state 12
    Function_declaration  go to state 13
    type_specifier        go to state 14


State 1

   24 type_specifier: CHAR .

    $default  reduce using rule 24 (type_specifier)


State 2

   23 type_specifier: FLOAT .

    $default  reduce using rule 23 (type_specifier)


State 3

   21 type_specifier: INT .

    $default  reduce using rule 21 (type_specifier)


State 4

   22 type_specifier: VOID .

    $default  reduce using rule 22 (type_specifier)


State 5

   25 type_specifier: PROC .

    $default  reduce using rule 25 (type_specifier)


State 6

   29 type_specifier: LNK .

    $default  reduce using rule 29 (type_specifier)


State 7

   27 type_specifier: JB .

    $default  reduce using rule 27 (type_specifier)


State 8

   26 type_specifier: CLUST .

    $default  reduce using rule 26 (type_specifier)


State 9

   28 type_specifier: MEM .

    $default  reduce using rule 28 (type_specifier)


State 10

    0 $accept: Start . $end

    $end  shift, and go to state 15


State 11

    2 Start: Object_declaration . Start
    4      | Object_declaration .

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4
    PROC   shift, and go to state 5
    LNK    shift, and go to state 6
    JB     shift, and go to state 7
    CLUST  shift, and go to state 8
    MEM    shift, and go to state 9

    $default  reduce using rule 4 (Start)

    Start                 go to state 16
    Object_declaration    go to state 11
    Dec_specifier         go to state 12
    Function_declaration  go to state 13
    type_specifier        go to state 14


State 12

    5 Object_declaration: Dec_specifier . IDENTIFIER ASGN_OP postfix_expression SEMI_COLON
    6                   | Dec_specifier . IDENTIFIER ASGN_OP object_expression SEMI_COLON
    7                   | Dec_specifier . IDENTIFIER SEMI_COLON
    8                   | Dec_specifier . array_expression ASGN_OP array_initialiser SEMI_COLON
    9                   | Dec_specifier . array_expression SEMI_COLON
   15 Function_declaration: Dec_specifier . IDENTIFIER LEFT_PARENTHESIS argument_list RIGHT_PARENTHESIS body_or_proto
   16                     | Dec_specifier . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS body_or_proto

    IDENTIFIER        shift, and go to state 17
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20

    array_expression    go to state 21
    primary_expression  go to state 22


State 13

    1 Start: Function_declaration . Start
    3      | Function_declaration .

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4
    PROC   shift, and go to state 5
    LNK    shift, and go to state 6
    JB     shift, and go to state 7
    CLUST  shift, and go to state 8
    MEM    shift, and go to state 9

    $default  reduce using rule 3 (Start)

    Start                 go to state 23
    Object_declaration    go to state 11
    Dec_specifier         go to state 12
    Function_declaration  go to state 13
    type_specifier        go to state 14


State 14

   10 Dec_specifier: type_specifier . pointer
   11              | type_specifier .

    MUL_OP  shift, and go to state 24

    $default  reduce using rule 11 (Dec_specifier)

    pointer  go to state 25


State 15

    0 $accept: Start $end .

    $default  accept


State 16

    2 Start: Object_declaration Start .

    $default  reduce using rule 2 (Start)


State 17

    5 Object_declaration: Dec_specifier IDENTIFIER . ASGN_OP postfix_expression SEMI_COLON
    6                   | Dec_specifier IDENTIFIER . ASGN_OP object_expression SEMI_COLON
    7                   | Dec_specifier IDENTIFIER . SEMI_COLON
   15 Function_declaration: Dec_specifier IDENTIFIER . LEFT_PARENTHESIS argument_list RIGHT_PARENTHESIS body_or_proto
   16                     | Dec_specifier IDENTIFIER . LEFT_PARENTHESIS RIGHT_PARENTHESIS body_or_proto
  101 primary_expression: IDENTIFIER . DEREF_OP IDENTIFIER
  102                   | IDENTIFIER .

    SEMI_COLON        shift, and go to state 26
    ASGN_OP           shift, and go to state 27
    LEFT_PARENTHESIS  shift, and go to state 28
    DEREF_OP          shift, and go to state 29

    $default  reduce using rule 102 (primary_expression)


State 18

  103 primary_expression: CONSTANT .

    $default  reduce using rule 103 (primary_expression)


State 19

  104 primary_expression: STRING_LITERAL .

    $default  reduce using rule 104 (primary_expression)


State 20

  105 primary_expression: LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    expression                 go to state 48
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 21

    8 Object_declaration: Dec_specifier array_expression . ASGN_OP array_initialiser SEMI_COLON
    9                   | Dec_specifier array_expression . SEMI_COLON
   99 array_expression: array_expression . LEFT_BRACKET expression RIGHT_BRACKET

    SEMI_COLON    shift, and go to state 73
    ASGN_OP       shift, and go to state 74
    LEFT_BRACKET  shift, and go to state 75


State 22

  100 array_expression: primary_expression . LEFT_BRACKET expression RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 76


State 23

    1 Start: Function_declaration Start .

    $default  reduce using rule 1 (Start)


State 24

   30 pointer: MUL_OP . pointer
   31        | MUL_OP .

    MUL_OP  shift, and go to state 24

    $default  reduce using rule 31 (pointer)

    pointer  go to state 77


State 25

   10 Dec_specifier: type_specifier pointer .

    $default  reduce using rule 10 (Dec_specifier)


State 26

    7 Object_declaration: Dec_specifier IDENTIFIER SEMI_COLON .

    $default  reduce using rule 7 (Object_declaration)


State 27

    5 Object_declaration: Dec_specifier IDENTIFIER ASGN_OP . postfix_expression SEMI_COLON
    6                   | Dec_specifier IDENTIFIER ASGN_OP . object_expression SEMI_COLON

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20
    MEMORY            shift, and go to state 47

    postfix_expression   go to state 78
    array_expression     go to state 64
    primary_expression   go to state 65
    object_expression    go to state 79
    cluster_object       go to state 67
    processor_object     go to state 68
    link_object          go to state 69
    memory_object        go to state 70
    job_object           go to state 71
    function_expression  go to state 72


State 28

   15 Function_declaration: Dec_specifier IDENTIFIER LEFT_PARENTHESIS . argument_list RIGHT_PARENTHESIS body_or_proto
   16                     | Dec_specifier IDENTIFIER LEFT_PARENTHESIS . RIGHT_PARENTHESIS body_or_proto

    CHAR               shift, and go to state 1
    FLOAT              shift, and go to state 2
    INT                shift, and go to state 3
    VOID               shift, and go to state 4
    PROC               shift, and go to state 5
    LNK                shift, and go to state 6
    JB                 shift, and go to state 7
    CLUST              shift, and go to state 8
    MEM                shift, and go to state 9
    RIGHT_PARENTHESIS  shift, and go to state 80

    Dec_specifier   go to state 81
    argument_list   go to state 82
    type_specifier  go to state 14


State 29

  101 primary_expression: IDENTIFIER DEREF_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 83


State 30

  110 cluster_object: CLUSTER . LEFT_PARENTHESIS proc_arr_arg COMMA topology_arg COMMA link_band_arg COMMA link_cap_arg narp

    LEFT_PARENTHESIS  shift, and go to state 84


State 31

  127 processor_object: PROCESSOR . LEFT_PARENTHESIS isa_args COMMA Clock_args COMMA mem_args narp

    LEFT_PARENTHESIS  shift, and go to state 85


State 32

  140 link_object: LINK . LEFT_PARENTHESIS start_args COMMA end_args COMMA link_band_arg COMMA link_cap_arg narp

    LEFT_PARENTHESIS  shift, and go to state 86


State 33

  150 job_object: JOB . LEFT_PARENTHESIS job_id_args COMMA flops_args COMMA deadline_args COMMA mem_required_args COMMA affinity_args RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 87


State 34

  163 function_expression: RUN . LEFT_PARENTHESIS cluster_list RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 88


State 35

  164 function_expression: WAIT . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 89


State 36

  165 function_expression: DISCARD_JOB . LEFT_PARENTHESIS job_list RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 90


State 37

  166 function_expression: STOP . LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 91


State 38

  101 primary_expression: IDENTIFIER . DEREF_OP IDENTIFIER
  102                   | IDENTIFIER .
  167 function_expression: IDENTIFIER . LEFT_PARENTHESIS RIGHT_PARENTHESIS
  168                    | IDENTIFIER . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
  169                    | IDENTIFIER . DOT object_function

    LEFT_PARENTHESIS  shift, and go to state 92
    DOT               shift, and go to state 93
    DEREF_OP          shift, and go to state 29

    LEFT_PARENTHESIS  [reduce using rule 102 (primary_expression)]
    $default          reduce using rule 102 (primary_expression)


State 39

   85 unary_expression: INC_OP . unary_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    unary_expression     go to state 94
    unary_operator       go to state 62
    postfix_expression   go to state 63
    array_expression     go to state 64
    primary_expression   go to state 65
    function_expression  go to state 72


State 40

   86 unary_expression: DEC_OP . unary_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    unary_expression     go to state 95
    unary_operator       go to state 62
    postfix_expression   go to state 63
    array_expression     go to state 64
    primary_expression   go to state 65
    function_expression  go to state 72


State 41

   93 unary_operator: AMPERSAND .

    $default  reduce using rule 93 (unary_operator)


State 42

   91 unary_operator: NOT_OP .

    $default  reduce using rule 91 (unary_operator)


State 43

   90 unary_operator: BTW_NOT .

    $default  reduce using rule 90 (unary_operator)


State 44

   89 unary_operator: MINUS .

    $default  reduce using rule 89 (unary_operator)


State 45

   88 unary_operator: PLUS .

    $default  reduce using rule 88 (unary_operator)


State 46

   92 unary_operator: MUL_OP .

    $default  reduce using rule 92 (unary_operator)


State 47

  145 memory_object: MEMORY . LEFT_PARENTHESIS mem_type_args COMMA mem_size_args narp

    LEFT_PARENTHESIS  shift, and go to state 96


State 48

  105 primary_expression: LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 97


State 49

   50 expression: assignment_expression .
   51           | assignment_expression . COMMA expression

    COMMA  shift, and go to state 98

    $default  reduce using rule 50 (expression)


State 50

   53 assignment_expression: conditional_expression .

    $default  reduce using rule 53 (assignment_expression)


State 51

   55 conditional_expression: logical_or_expression .

    $default  reduce using rule 55 (conditional_expression)


State 52

   56 logical_or_expression: logical_and_expression . OR_OP logical_or_expression
   57                      | logical_and_expression .

    OR_OP  shift, and go to state 99

    $default  reduce using rule 57 (logical_or_expression)


State 53

   58 logical_and_expression: bitwise_or_expression . AND_OP logical_and_expression
   59                       | bitwise_or_expression .

    AND_OP  shift, and go to state 100

    $default  reduce using rule 59 (logical_and_expression)


State 54

   60 bitwise_or_expression: bitwise_xor_expression . BTW_OR bitwise_or_expression
   61                      | bitwise_xor_expression .

    BTW_OR  shift, and go to state 101

    $default  reduce using rule 61 (bitwise_or_expression)


State 55

   62 bitwise_xor_expression: and_expression .
   63                       | and_expression . XOR_OP bitwise_xor_expression

    XOR_OP  shift, and go to state 102

    $default  reduce using rule 62 (bitwise_xor_expression)


State 56

   64 and_expression: equality_expression .
   65               | equality_expression . AMPERSAND and_expression

    AMPERSAND  shift, and go to state 103

    AMPERSAND  [reduce using rule 64 (and_expression)]
    $default   reduce using rule 64 (and_expression)


State 57

   66 equality_expression: relational_expression .
   67                    | relational_expression . EQ_OP equality_expression
   68                    | relational_expression . NE_OP equality_expression

    EQ_OP  shift, and go to state 104
    NE_OP  shift, and go to state 105

    $default  reduce using rule 66 (equality_expression)


State 58

   69 relational_expression: shift_expression .
   70                      | shift_expression . LESS_THAN relational_expression
   71                      | shift_expression . GREATER_THAN relational_expression
   72                      | shift_expression . LE_OP relational_expression
   73                      | shift_expression . GE_OP relational_expression

    LE_OP         shift, and go to state 106
    GE_OP         shift, and go to state 107
    LESS_THAN     shift, and go to state 108
    GREATER_THAN  shift, and go to state 109

    $default  reduce using rule 69 (relational_expression)


State 59

   74 shift_expression: additive_expression .
   75                 | additive_expression . LEFT_OP shift_expression
   76                 | additive_expression . RIGHT_OP shift_expression

    RIGHT_OP  shift, and go to state 110
    LEFT_OP   shift, and go to state 111

    $default  reduce using rule 74 (shift_expression)


State 60

   77 additive_expression: multiplicative_expression .
   78                    | multiplicative_expression . PLUS additive_expression
   79                    | multiplicative_expression . MINUS additive_expression
   81 multiplicative_expression: multiplicative_expression . MUL_OP unary_expression
   82                          | multiplicative_expression . DIV_OP unary_expression
   83                          | multiplicative_expression . MOD_OP unary_expression

    MINUS   shift, and go to state 112
    PLUS    shift, and go to state 113
    MUL_OP  shift, and go to state 114
    DIV_OP  shift, and go to state 115
    MOD_OP  shift, and go to state 116

    MINUS     [reduce using rule 77 (additive_expression)]
    PLUS      [reduce using rule 77 (additive_expression)]
    MUL_OP    [reduce using rule 77 (additive_expression)]
    $default  reduce using rule 77 (additive_expression)


State 61

   52 assignment_expression: unary_expression . ASGN_OP assignment_expression
   80 multiplicative_expression: unary_expression .

    ASGN_OP  shift, and go to state 117

    $default  reduce using rule 80 (multiplicative_expression)


State 62

   87 unary_expression: unary_operator . unary_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    unary_expression     go to state 118
    unary_operator       go to state 62
    postfix_expression   go to state 63
    array_expression     go to state 64
    primary_expression   go to state 65
    function_expression  go to state 72


State 63

   84 unary_expression: postfix_expression .
   97 postfix_expression: postfix_expression . INC_OP
   98                   | postfix_expression . DEC_OP

    INC_OP  shift, and go to state 119
    DEC_OP  shift, and go to state 120

    INC_OP    [reduce using rule 84 (unary_expression)]
    DEC_OP    [reduce using rule 84 (unary_expression)]
    $default  reduce using rule 84 (unary_expression)


State 64

   95 postfix_expression: array_expression .
   99 array_expression: array_expression . LEFT_BRACKET expression RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 75

    $default  reduce using rule 95 (postfix_expression)


State 65

   94 postfix_expression: primary_expression .
  100 array_expression: primary_expression . LEFT_BRACKET expression RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 76

    $default  reduce using rule 94 (postfix_expression)


State 66

   54 assignment_expression: object_expression .

    $default  reduce using rule 54 (assignment_expression)


State 67

  109 object_expression: cluster_object .

    $default  reduce using rule 109 (object_expression)


State 68

  111 cluster_object: processor_object .

    $default  reduce using rule 111 (cluster_object)


State 69

  106 object_expression: link_object .

    $default  reduce using rule 106 (object_expression)


State 70

  107 object_expression: memory_object .

    $default  reduce using rule 107 (object_expression)


State 71

  108 object_expression: job_object .

    $default  reduce using rule 108 (object_expression)


State 72

   96 postfix_expression: function_expression .

    $default  reduce using rule 96 (postfix_expression)


State 73

    9 Object_declaration: Dec_specifier array_expression SEMI_COLON .

    $default  reduce using rule 9 (Object_declaration)


State 74

    8 Object_declaration: Dec_specifier array_expression ASGN_OP . array_initialiser SEMI_COLON

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_CURLY        shift, and go to state 121
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    array_initialiser          go to state 122
    expression                 go to state 123
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 75

   99 array_expression: array_expression LEFT_BRACKET . expression RIGHT_BRACKET

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    expression                 go to state 124
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 76

  100 array_expression: primary_expression LEFT_BRACKET . expression RIGHT_BRACKET

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    expression                 go to state 125
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 77

   30 pointer: MUL_OP pointer .

    $default  reduce using rule 30 (pointer)


State 78

    5 Object_declaration: Dec_specifier IDENTIFIER ASGN_OP postfix_expression . SEMI_COLON
   97 postfix_expression: postfix_expression . INC_OP
   98                   | postfix_expression . DEC_OP

    INC_OP      shift, and go to state 119
    DEC_OP      shift, and go to state 120
    SEMI_COLON  shift, and go to state 126


State 79

    6 Object_declaration: Dec_specifier IDENTIFIER ASGN_OP object_expression . SEMI_COLON

    SEMI_COLON  shift, and go to state 127


State 80

   16 Function_declaration: Dec_specifier IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS . body_or_proto

    SEMI_COLON  shift, and go to state 128
    LEFT_CURLY  shift, and go to state 129

    body_or_proto  go to state 130


State 81

   19 argument_list: Dec_specifier . IDENTIFIER COMMA argument_list
   20              | Dec_specifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 131


State 82

   15 Function_declaration: Dec_specifier IDENTIFIER LEFT_PARENTHESIS argument_list . RIGHT_PARENTHESIS body_or_proto

    RIGHT_PARENTHESIS  shift, and go to state 132


State 83

  101 primary_expression: IDENTIFIER DEREF_OP IDENTIFIER .

    $default  reduce using rule 101 (primary_expression)


State 84

  110 cluster_object: CLUSTER LEFT_PARENTHESIS . proc_arr_arg COMMA topology_arg COMMA link_band_arg COMMA link_cap_arg narp

    IDENTIFIER    shift, and go to state 133
    LEFT_BRACKET  shift, and go to state 134
    PROCESSORS    shift, and go to state 135

    proc_arr_arg  go to state 136


State 85

  127 processor_object: PROCESSOR LEFT_PARENTHESIS . isa_args COMMA Clock_args COMMA mem_args narp

    ISA        shift, and go to state 137
    PROC_TYPE  shift, and go to state 138

    isa_args  go to state 139


State 86

  140 link_object: LINK LEFT_PARENTHESIS . start_args COMMA end_args COMMA link_band_arg COMMA link_cap_arg narp

    START_POINT       shift, and go to state 140
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 141
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    start_args                 go to state 143
    function_expression        go to state 72


State 87

  150 job_object: JOB LEFT_PARENTHESIS . job_id_args COMMA flops_args COMMA deadline_args COMMA mem_required_args COMMA affinity_args RIGHT_PARENTHESIS

    JOB_ID            shift, and go to state 144
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 145
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    job_id_args                go to state 146
    function_expression        go to state 72


State 88

  163 function_expression: RUN LEFT_PARENTHESIS . cluster_list RIGHT_PARENTHESIS

    CLUSTER    shift, and go to state 30
    PROCESSOR  shift, and go to state 31

    cluster_object    go to state 147
    cluster_list      go to state 148
    processor_object  go to state 68


State 89

  164 function_expression: WAIT LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 149


State 90

  165 function_expression: DISCARD_JOB LEFT_PARENTHESIS . job_list RIGHT_PARENTHESIS

    JOB         shift, and go to state 33
    IDENTIFIER  shift, and go to state 150

    job_object  go to state 151
    job_list    go to state 152


State 91

  166 function_expression: STOP LEFT_PARENTHESIS . IDENTIFIER RIGHT_PARENTHESIS

    IDENTIFIER  shift, and go to state 153


State 92

  167 function_expression: IDENTIFIER LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  168                    | IDENTIFIER LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS

    CLUSTER            shift, and go to state 30
    PROCESSOR          shift, and go to state 31
    LINK               shift, and go to state 32
    JOB                shift, and go to state 33
    RUN                shift, and go to state 34
    WAIT               shift, and go to state 35
    DISCARD_JOB        shift, and go to state 36
    STOP               shift, and go to state 37
    IDENTIFIER         shift, and go to state 38
    CONSTANT           shift, and go to state 18
    STRING_LITERAL     shift, and go to state 19
    INC_OP             shift, and go to state 39
    DEC_OP             shift, and go to state 40
    LEFT_PARENTHESIS   shift, and go to state 20
    RIGHT_PARENTHESIS  shift, and go to state 154
    AMPERSAND          shift, and go to state 41
    NOT_OP             shift, and go to state 42
    BTW_NOT            shift, and go to state 43
    MINUS              shift, and go to state 44
    PLUS               shift, and go to state 45
    MUL_OP             shift, and go to state 46
    MEMORY             shift, and go to state 47

    expression                 go to state 155
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 93

  169 function_expression: IDENTIFIER DOT . object_function

    GET_AVAILABLE_MEMORY  shift, and go to state 156
    GET_JOB_AFFINITY      shift, and go to state 157
    GET_JOB_MEMORY        shift, and go to state 158
    GET_FLOPS             shift, and go to state 159
    GET_DEADLINE          shift, and go to state 160
    IS_RUNNING            shift, and go to state 161
    SUBMIT_JOBS           shift, and go to state 162
    GET_PROC_TYPE         shift, and go to state 163
    IS_PROCESSOR          shift, and go to state 164
    GET_PROCESSOR         shift, and go to state 165
    GET_CLOCK_SPEED       shift, and go to state 166

    object_function     go to state 167
    memory_function     go to state 168
    job_function        go to state 169
    processor_function  go to state 170
    cluster_function    go to state 171


State 94

   85 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 85 (unary_expression)


State 95

   86 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 86 (unary_expression)


State 96

  145 memory_object: MEMORY LEFT_PARENTHESIS . mem_type_args COMMA mem_size_args narp

    MEMORY_TYPE  shift, and go to state 172
    MEM_TYPES    shift, and go to state 173

    mem_type_args  go to state 174


State 97

  105 primary_expression: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    $default  reduce using rule 105 (primary_expression)


State 98

   51 expression: assignment_expression COMMA . expression

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    expression                 go to state 175
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 99

   56 logical_or_expression: logical_and_expression OR_OP . logical_or_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    logical_or_expression      go to state 176
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 100

   58 logical_and_expression: bitwise_or_expression AND_OP . logical_and_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    logical_and_expression     go to state 177
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 101

   60 bitwise_or_expression: bitwise_xor_expression BTW_OR . bitwise_or_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    bitwise_or_expression      go to state 178
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 102

   63 bitwise_xor_expression: and_expression XOR_OP . bitwise_xor_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    bitwise_xor_expression     go to state 179
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 103

   65 and_expression: equality_expression AMPERSAND . and_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    and_expression             go to state 180
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 104

   67 equality_expression: relational_expression EQ_OP . equality_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    equality_expression        go to state 181
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 105

   68 equality_expression: relational_expression NE_OP . equality_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    equality_expression        go to state 182
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 106

   72 relational_expression: shift_expression LE_OP . relational_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    relational_expression      go to state 183
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 107

   73 relational_expression: shift_expression GE_OP . relational_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    relational_expression      go to state 184
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 108

   70 relational_expression: shift_expression LESS_THAN . relational_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    relational_expression      go to state 185
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 109

   71 relational_expression: shift_expression GREATER_THAN . relational_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    relational_expression      go to state 186
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 110

   76 shift_expression: additive_expression RIGHT_OP . shift_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    shift_expression           go to state 187
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 111

   75 shift_expression: additive_expression LEFT_OP . shift_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    shift_expression           go to state 188
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 112

   79 additive_expression: multiplicative_expression MINUS . additive_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    additive_expression        go to state 189
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 113

   78 additive_expression: multiplicative_expression PLUS . additive_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    additive_expression        go to state 190
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 114

   81 multiplicative_expression: multiplicative_expression MUL_OP . unary_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    unary_expression     go to state 191
    unary_operator       go to state 62
    postfix_expression   go to state 63
    array_expression     go to state 64
    primary_expression   go to state 65
    function_expression  go to state 72


State 115

   82 multiplicative_expression: multiplicative_expression DIV_OP . unary_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    unary_expression     go to state 192
    unary_operator       go to state 62
    postfix_expression   go to state 63
    array_expression     go to state 64
    primary_expression   go to state 65
    function_expression  go to state 72


State 116

   83 multiplicative_expression: multiplicative_expression MOD_OP . unary_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    unary_expression     go to state 193
    unary_operator       go to state 62
    postfix_expression   go to state 63
    array_expression     go to state 64
    primary_expression   go to state 65
    function_expression  go to state 72


State 117

   52 assignment_expression: unary_expression ASGN_OP . assignment_expression

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    assignment_expression      go to state 194
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 118

   87 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 87 (unary_expression)


State 119

   97 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 97 (postfix_expression)


State 120

   98 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 98 (postfix_expression)


State 121

   12 array_initialiser: LEFT_CURLY . array_initialiser RIGHT_CURLY
   13                  | LEFT_CURLY . array_initialiser RIGHT_CURLY COMMA array_initialiser

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_CURLY        shift, and go to state 121
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    array_initialiser          go to state 195
    expression                 go to state 123
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 122

    8 Object_declaration: Dec_specifier array_expression ASGN_OP array_initialiser . SEMI_COLON

    SEMI_COLON  shift, and go to state 196


State 123

   14 array_initialiser: expression .

    $default  reduce using rule 14 (array_initialiser)


State 124

   99 array_expression: array_expression LEFT_BRACKET expression . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 197


State 125

  100 array_expression: primary_expression LEFT_BRACKET expression . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 198


State 126

    5 Object_declaration: Dec_specifier IDENTIFIER ASGN_OP postfix_expression SEMI_COLON .

    $default  reduce using rule 5 (Object_declaration)


State 127

    6 Object_declaration: Dec_specifier IDENTIFIER ASGN_OP object_expression SEMI_COLON .

    $default  reduce using rule 6 (Object_declaration)


State 128

   18 body_or_proto: SEMI_COLON .

    $default  reduce using rule 18 (body_or_proto)


State 129

   17 body_or_proto: LEFT_CURLY . statement_list RIGHT_CURLY

    BREAK             shift, and go to state 199
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 200
    FLOAT             shift, and go to state 2
    FOR               shift, and go to state 201
    IF                shift, and go to state 202
    INT               shift, and go to state 3
    RETURN            shift, and go to state 203
    VOID              shift, and go to state 4
    WHILE             shift, and go to state 204
    PROC              shift, and go to state 5
    LNK               shift, and go to state 6
    JB                shift, and go to state 7
    CLUST             shift, and go to state 8
    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    MEM               shift, and go to state 9
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    SEMI_COLON        shift, and go to state 205
    LEFT_CURLY        shift, and go to state 206
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    Object_declaration         go to state 207
    Dec_specifier              go to state 208
    type_specifier             go to state 14
    statement_list             go to state 209
    Statement                  go to state 210
    Jump_statement             go to state 211
    Selection_statement        go to state 212
    Iteration_statement        go to state 213
    Expression_statement       go to state 214
    expression                 go to state 215
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 130

   16 Function_declaration: Dec_specifier IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS body_or_proto .

    $default  reduce using rule 16 (Function_declaration)


State 131

   19 argument_list: Dec_specifier IDENTIFIER . COMMA argument_list
   20              | Dec_specifier IDENTIFIER .

    COMMA  shift, and go to state 216

    $default  reduce using rule 20 (argument_list)


State 132

   15 Function_declaration: Dec_specifier IDENTIFIER LEFT_PARENTHESIS argument_list RIGHT_PARENTHESIS . body_or_proto

    SEMI_COLON  shift, and go to state 128
    LEFT_CURLY  shift, and go to state 129

    body_or_proto  go to state 217


State 133

  114 proc_arr_arg: IDENTIFIER .

    $default  reduce using rule 114 (proc_arr_arg)


State 134

  115 proc_arr_arg: LEFT_BRACKET . cluster_list RIGHT_BRACKET

    CLUSTER    shift, and go to state 30
    PROCESSOR  shift, and go to state 31

    cluster_object    go to state 147
    cluster_list      go to state 218
    processor_object  go to state 68


State 135

  112 proc_arr_arg: PROCESSORS . ASGN_OP IDENTIFIER
  113             | PROCESSORS . ASGN_OP LEFT_BRACKET cluster_list RIGHT_BRACKET

    ASGN_OP  shift, and go to state 219


State 136

  110 cluster_object: CLUSTER LEFT_PARENTHESIS proc_arr_arg . COMMA topology_arg COMMA link_band_arg COMMA link_cap_arg narp

    COMMA  shift, and go to state 220


State 137

  128 isa_args: ISA . ASGN_OP PROC_TYPE

    ASGN_OP  shift, and go to state 221


State 138

  129 isa_args: PROC_TYPE .

    $default  reduce using rule 129 (isa_args)


State 139

  127 processor_object: PROCESSOR LEFT_PARENTHESIS isa_args . COMMA Clock_args COMMA mem_args narp

    COMMA  shift, and go to state 222


State 140

  141 start_args: START_POINT . ASGN_OP conditional_expression

    ASGN_OP  shift, and go to state 223


State 141

  142 start_args: conditional_expression .

    $default  reduce using rule 142 (start_args)


State 142

   80 multiplicative_expression: unary_expression .

    $default  reduce using rule 80 (multiplicative_expression)


State 143

  140 link_object: LINK LEFT_PARENTHESIS start_args . COMMA end_args COMMA link_band_arg COMMA link_cap_arg narp

    COMMA  shift, and go to state 224


State 144

  151 job_id_args: JOB_ID . ASGN_OP conditional_expression

    ASGN_OP  shift, and go to state 225


State 145

  152 job_id_args: conditional_expression .

    $default  reduce using rule 152 (job_id_args)


State 146

  150 job_object: JOB LEFT_PARENTHESIS job_id_args . COMMA flops_args COMMA deadline_args COMMA mem_required_args COMMA affinity_args RIGHT_PARENTHESIS

    COMMA  shift, and go to state 226


State 147

  116 cluster_list: cluster_object . COMMA cluster_list
  117             | cluster_object .

    COMMA  shift, and go to state 227

    $default  reduce using rule 117 (cluster_list)


State 148

  163 function_expression: RUN LEFT_PARENTHESIS cluster_list . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 228


State 149

  164 function_expression: WAIT LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 164 (function_expression)


State 150

  186 job_list: IDENTIFIER . COMMA job_list
  187         | IDENTIFIER .

    COMMA  shift, and go to state 229

    $default  reduce using rule 187 (job_list)


State 151

  188 job_list: job_object . COMMA job_list
  189         | job_object .

    COMMA  shift, and go to state 230

    $default  reduce using rule 189 (job_list)


State 152

  165 function_expression: DISCARD_JOB LEFT_PARENTHESIS job_list . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 231


State 153

  166 function_expression: STOP LEFT_PARENTHESIS IDENTIFIER . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 232


State 154

  167 function_expression: IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 167 (function_expression)


State 155

  168 function_expression: IDENTIFIER LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 233


State 156

  174 memory_function: GET_AVAILABLE_MEMORY . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 234


State 157

  175 job_function: GET_JOB_AFFINITY . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 235


State 158

  176 job_function: GET_JOB_MEMORY . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 236


State 159

  177 job_function: GET_FLOPS . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 237


State 160

  178 job_function: GET_DEADLINE . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 238


State 161

  179 processor_function: IS_RUNNING . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 239


State 162

  180 processor_function: SUBMIT_JOBS . LEFT_PARENTHESIS job_list RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 240


State 163

  182 processor_function: GET_PROC_TYPE . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 241


State 164

  183 processor_function: IS_PROCESSOR . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 242


State 165

  184 cluster_function: GET_PROCESSOR . LEFT_PARENTHESIS RIGHT_PARENTHESIS
  185                 | GET_PROCESSOR . LEFT_PARENTHESIS primary_expression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 243


State 166

  181 processor_function: GET_CLOCK_SPEED . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 244


State 167

  169 function_expression: IDENTIFIER DOT object_function .

    $default  reduce using rule 169 (function_expression)


State 168

  172 object_function: memory_function .

    $default  reduce using rule 172 (object_function)


State 169

  171 object_function: job_function .

    $default  reduce using rule 171 (object_function)


State 170

  170 object_function: processor_function .

    $default  reduce using rule 170 (object_function)


State 171

  173 object_function: cluster_function .

    $default  reduce using rule 173 (object_function)


State 172

  146 mem_type_args: MEMORY_TYPE . ASGN_OP MEM_TYPES

    ASGN_OP  shift, and go to state 245


State 173

  147 mem_type_args: MEM_TYPES .

    $default  reduce using rule 147 (mem_type_args)


State 174

  145 memory_object: MEMORY LEFT_PARENTHESIS mem_type_args . COMMA mem_size_args narp

    COMMA  shift, and go to state 246


State 175

   51 expression: assignment_expression COMMA expression .

    $default  reduce using rule 51 (expression)


State 176

   56 logical_or_expression: logical_and_expression OR_OP logical_or_expression .

    $default  reduce using rule 56 (logical_or_expression)


State 177

   58 logical_and_expression: bitwise_or_expression AND_OP logical_and_expression .

    $default  reduce using rule 58 (logical_and_expression)


State 178

   60 bitwise_or_expression: bitwise_xor_expression BTW_OR bitwise_or_expression .

    $default  reduce using rule 60 (bitwise_or_expression)


State 179

   63 bitwise_xor_expression: and_expression XOR_OP bitwise_xor_expression .

    $default  reduce using rule 63 (bitwise_xor_expression)


State 180

   65 and_expression: equality_expression AMPERSAND and_expression .

    $default  reduce using rule 65 (and_expression)


State 181

   67 equality_expression: relational_expression EQ_OP equality_expression .

    $default  reduce using rule 67 (equality_expression)


State 182

   68 equality_expression: relational_expression NE_OP equality_expression .

    $default  reduce using rule 68 (equality_expression)


State 183

   72 relational_expression: shift_expression LE_OP relational_expression .

    $default  reduce using rule 72 (relational_expression)


State 184

   73 relational_expression: shift_expression GE_OP relational_expression .

    $default  reduce using rule 73 (relational_expression)


State 185

   70 relational_expression: shift_expression LESS_THAN relational_expression .

    $default  reduce using rule 70 (relational_expression)


State 186

   71 relational_expression: shift_expression GREATER_THAN relational_expression .

    $default  reduce using rule 71 (relational_expression)


State 187

   76 shift_expression: additive_expression RIGHT_OP shift_expression .

    $default  reduce using rule 76 (shift_expression)


State 188

   75 shift_expression: additive_expression LEFT_OP shift_expression .

    $default  reduce using rule 75 (shift_expression)


State 189

   79 additive_expression: multiplicative_expression MINUS additive_expression .

    $default  reduce using rule 79 (additive_expression)


State 190

   78 additive_expression: multiplicative_expression PLUS additive_expression .

    $default  reduce using rule 78 (additive_expression)


State 191

   81 multiplicative_expression: multiplicative_expression MUL_OP unary_expression .

    $default  reduce using rule 81 (multiplicative_expression)


State 192

   82 multiplicative_expression: multiplicative_expression DIV_OP unary_expression .

    $default  reduce using rule 82 (multiplicative_expression)


State 193

   83 multiplicative_expression: multiplicative_expression MOD_OP unary_expression .

    $default  reduce using rule 83 (multiplicative_expression)


State 194

   52 assignment_expression: unary_expression ASGN_OP assignment_expression .

    $default  reduce using rule 52 (assignment_expression)


State 195

   12 array_initialiser: LEFT_CURLY array_initialiser . RIGHT_CURLY
   13                  | LEFT_CURLY array_initialiser . RIGHT_CURLY COMMA array_initialiser

    RIGHT_CURLY  shift, and go to state 247


State 196

    8 Object_declaration: Dec_specifier array_expression ASGN_OP array_initialiser SEMI_COLON .

    $default  reduce using rule 8 (Object_declaration)


State 197

   99 array_expression: array_expression LEFT_BRACKET expression RIGHT_BRACKET .

    $default  reduce using rule 99 (array_expression)


State 198

  100 array_expression: primary_expression LEFT_BRACKET expression RIGHT_BRACKET .

    $default  reduce using rule 100 (array_expression)


State 199

   42 Jump_statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 248


State 200

   41 Jump_statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 249


State 201

   46 Iteration_statement: FOR . LEFT_PARENTHESIS Expression_statement Expression_statement RIGHT_PARENTHESIS Statement
   47                    | FOR . LEFT_PARENTHESIS Expression_statement Expression_statement expression RIGHT_PARENTHESIS Statement

    LEFT_PARENTHESIS  shift, and go to state 250


State 202

   43 Selection_statement: IF . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY ELSE LEFT_CURLY statement_list RIGHT_CURLY
   44                    | IF . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY

    LEFT_PARENTHESIS  shift, and go to state 251


State 203

   40 Jump_statement: RETURN . expression

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    expression                 go to state 252
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 204

   45 Iteration_statement: WHILE . LEFT_PARENTHESIS expression RIGHT_PARENTHESIS Statement

    LEFT_PARENTHESIS  shift, and go to state 253


State 205

   49 Expression_statement: SEMI_COLON .

    $default  reduce using rule 49 (Expression_statement)


State 206

   34 Statement: LEFT_CURLY . statement_list RIGHT_CURLY

    BREAK             shift, and go to state 199
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 200
    FLOAT             shift, and go to state 2
    FOR               shift, and go to state 201
    IF                shift, and go to state 202
    INT               shift, and go to state 3
    RETURN            shift, and go to state 203
    VOID              shift, and go to state 4
    WHILE             shift, and go to state 204
    PROC              shift, and go to state 5
    LNK               shift, and go to state 6
    JB                shift, and go to state 7
    CLUST             shift, and go to state 8
    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    MEM               shift, and go to state 9
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    SEMI_COLON        shift, and go to state 205
    LEFT_CURLY        shift, and go to state 206
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    Object_declaration         go to state 207
    Dec_specifier              go to state 208
    type_specifier             go to state 14
    statement_list             go to state 254
    Statement                  go to state 210
    Jump_statement             go to state 211
    Selection_statement        go to state 212
    Iteration_statement        go to state 213
    Expression_statement       go to state 214
    expression                 go to state 215
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 207

   39 Statement: Object_declaration .

    $default  reduce using rule 39 (Statement)


State 208

    5 Object_declaration: Dec_specifier . IDENTIFIER ASGN_OP postfix_expression SEMI_COLON
    6                   | Dec_specifier . IDENTIFIER ASGN_OP object_expression SEMI_COLON
    7                   | Dec_specifier . IDENTIFIER SEMI_COLON
    8                   | Dec_specifier . array_expression ASGN_OP array_initialiser SEMI_COLON
    9                   | Dec_specifier . array_expression SEMI_COLON

    IDENTIFIER        shift, and go to state 255
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    LEFT_PARENTHESIS  shift, and go to state 20

    array_expression    go to state 21
    primary_expression  go to state 22


State 209

   17 body_or_proto: LEFT_CURLY statement_list . RIGHT_CURLY

    RIGHT_CURLY  shift, and go to state 256


State 210

   32 statement_list: Statement . statement_list
   33               | Statement .

    BREAK             shift, and go to state 199
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 200
    FLOAT             shift, and go to state 2
    FOR               shift, and go to state 201
    IF                shift, and go to state 202
    INT               shift, and go to state 3
    RETURN            shift, and go to state 203
    VOID              shift, and go to state 4
    WHILE             shift, and go to state 204
    PROC              shift, and go to state 5
    LNK               shift, and go to state 6
    JB                shift, and go to state 7
    CLUST             shift, and go to state 8
    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    MEM               shift, and go to state 9
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    SEMI_COLON        shift, and go to state 205
    LEFT_CURLY        shift, and go to state 206
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    $default  reduce using rule 33 (statement_list)

    Object_declaration         go to state 207
    Dec_specifier              go to state 208
    type_specifier             go to state 14
    statement_list             go to state 257
    Statement                  go to state 210
    Jump_statement             go to state 211
    Selection_statement        go to state 212
    Iteration_statement        go to state 213
    Expression_statement       go to state 214
    expression                 go to state 215
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 211

   38 Statement: Jump_statement .

    $default  reduce using rule 38 (Statement)


State 212

   36 Statement: Selection_statement .

    $default  reduce using rule 36 (Statement)


State 213

   37 Statement: Iteration_statement .

    $default  reduce using rule 37 (Statement)


State 214

   35 Statement: Expression_statement .

    $default  reduce using rule 35 (Statement)


State 215

   48 Expression_statement: expression . SEMI_COLON

    SEMI_COLON  shift, and go to state 258


State 216

   19 argument_list: Dec_specifier IDENTIFIER COMMA . argument_list

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3
    VOID   shift, and go to state 4
    PROC   shift, and go to state 5
    LNK    shift, and go to state 6
    JB     shift, and go to state 7
    CLUST  shift, and go to state 8
    MEM    shift, and go to state 9

    Dec_specifier   go to state 81
    argument_list   go to state 259
    type_specifier  go to state 14


State 217

   15 Function_declaration: Dec_specifier IDENTIFIER LEFT_PARENTHESIS argument_list RIGHT_PARENTHESIS body_or_proto .

    $default  reduce using rule 15 (Function_declaration)


State 218

  115 proc_arr_arg: LEFT_BRACKET cluster_list . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 260


State 219

  112 proc_arr_arg: PROCESSORS ASGN_OP . IDENTIFIER
  113             | PROCESSORS ASGN_OP . LEFT_BRACKET cluster_list RIGHT_BRACKET

    IDENTIFIER    shift, and go to state 261
    LEFT_BRACKET  shift, and go to state 262


State 220

  110 cluster_object: CLUSTER LEFT_PARENTHESIS proc_arr_arg COMMA . topology_arg COMMA link_band_arg COMMA link_cap_arg narp

    TOPOLOGY        shift, and go to state 263
    STRING_LITERAL  shift, and go to state 264

    topology_arg  go to state 265


State 221

  128 isa_args: ISA ASGN_OP . PROC_TYPE

    PROC_TYPE  shift, and go to state 266


State 222

  127 processor_object: PROCESSOR LEFT_PARENTHESIS isa_args COMMA . Clock_args COMMA mem_args narp

    CLOCK_SPEED  shift, and go to state 267
    CONSTANT     shift, and go to state 268

    Clock_args  go to state 269


State 223

  141 start_args: START_POINT ASGN_OP . conditional_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 270
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 224

  140 link_object: LINK LEFT_PARENTHESIS start_args COMMA . end_args COMMA link_band_arg COMMA link_cap_arg narp

    END_POINT         shift, and go to state 271
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 272
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    end_args                   go to state 273
    function_expression        go to state 72


State 225

  151 job_id_args: JOB_ID ASGN_OP . conditional_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 274
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 226

  150 job_object: JOB LEFT_PARENTHESIS job_id_args COMMA . flops_args COMMA deadline_args COMMA mem_required_args COMMA affinity_args RIGHT_PARENTHESIS

    FLOPS_REQUIRED    shift, and go to state 275
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 276
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    flops_args                 go to state 277
    function_expression        go to state 72


State 227

  116 cluster_list: cluster_object COMMA . cluster_list

    CLUSTER    shift, and go to state 30
    PROCESSOR  shift, and go to state 31

    cluster_object    go to state 147
    cluster_list      go to state 278
    processor_object  go to state 68


State 228

  163 function_expression: RUN LEFT_PARENTHESIS cluster_list RIGHT_PARENTHESIS .

    $default  reduce using rule 163 (function_expression)


State 229

  186 job_list: IDENTIFIER COMMA . job_list

    JOB         shift, and go to state 33
    IDENTIFIER  shift, and go to state 150

    job_object  go to state 151
    job_list    go to state 279


State 230

  188 job_list: job_object COMMA . job_list

    JOB         shift, and go to state 33
    IDENTIFIER  shift, and go to state 150

    job_object  go to state 151
    job_list    go to state 280


State 231

  165 function_expression: DISCARD_JOB LEFT_PARENTHESIS job_list RIGHT_PARENTHESIS .

    $default  reduce using rule 165 (function_expression)


State 232

  166 function_expression: STOP LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS .

    $default  reduce using rule 166 (function_expression)


State 233

  168 function_expression: IDENTIFIER LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    $default  reduce using rule 168 (function_expression)


State 234

  174 memory_function: GET_AVAILABLE_MEMORY LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 281


State 235

  175 job_function: GET_JOB_AFFINITY LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 282


State 236

  176 job_function: GET_JOB_MEMORY LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 283


State 237

  177 job_function: GET_FLOPS LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 284


State 238

  178 job_function: GET_DEADLINE LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 285


State 239

  179 processor_function: IS_RUNNING LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 286


State 240

  180 processor_function: SUBMIT_JOBS LEFT_PARENTHESIS . job_list RIGHT_PARENTHESIS

    JOB         shift, and go to state 33
    IDENTIFIER  shift, and go to state 150

    job_object  go to state 151
    job_list    go to state 287


State 241

  182 processor_function: GET_PROC_TYPE LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 288


State 242

  183 processor_function: IS_PROCESSOR LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 289


State 243

  184 cluster_function: GET_PROCESSOR LEFT_PARENTHESIS . RIGHT_PARENTHESIS
  185                 | GET_PROCESSOR LEFT_PARENTHESIS . primary_expression RIGHT_PARENTHESIS

    IDENTIFIER         shift, and go to state 290
    CONSTANT           shift, and go to state 18
    STRING_LITERAL     shift, and go to state 19
    LEFT_PARENTHESIS   shift, and go to state 20
    RIGHT_PARENTHESIS  shift, and go to state 291

    primary_expression  go to state 292


State 244

  181 processor_function: GET_CLOCK_SPEED LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 293


State 245

  146 mem_type_args: MEMORY_TYPE ASGN_OP . MEM_TYPES

    MEM_TYPES  shift, and go to state 294


State 246

  145 memory_object: MEMORY LEFT_PARENTHESIS mem_type_args COMMA . mem_size_args narp

    MEMORY_SIZE       shift, and go to state 295
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 296
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    mem_size_args              go to state 297
    function_expression        go to state 72


State 247

   12 array_initialiser: LEFT_CURLY array_initialiser RIGHT_CURLY .
   13                  | LEFT_CURLY array_initialiser RIGHT_CURLY . COMMA array_initialiser

    COMMA  shift, and go to state 298

    $default  reduce using rule 12 (array_initialiser)


State 248

   42 Jump_statement: BREAK SEMI_COLON .

    $default  reduce using rule 42 (Jump_statement)


State 249

   41 Jump_statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 41 (Jump_statement)


State 250

   46 Iteration_statement: FOR LEFT_PARENTHESIS . Expression_statement Expression_statement RIGHT_PARENTHESIS Statement
   47                    | FOR LEFT_PARENTHESIS . Expression_statement Expression_statement expression RIGHT_PARENTHESIS Statement

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    SEMI_COLON        shift, and go to state 205
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    Expression_statement       go to state 299
    expression                 go to state 215
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 251

   43 Selection_statement: IF LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY ELSE LEFT_CURLY statement_list RIGHT_CURLY
   44                    | IF LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    expression                 go to state 300
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 252

   40 Jump_statement: RETURN expression .

    $default  reduce using rule 40 (Jump_statement)


State 253

   45 Iteration_statement: WHILE LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS Statement

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    expression                 go to state 301
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 254

   34 Statement: LEFT_CURLY statement_list . RIGHT_CURLY

    RIGHT_CURLY  shift, and go to state 302


State 255

    5 Object_declaration: Dec_specifier IDENTIFIER . ASGN_OP postfix_expression SEMI_COLON
    6                   | Dec_specifier IDENTIFIER . ASGN_OP object_expression SEMI_COLON
    7                   | Dec_specifier IDENTIFIER . SEMI_COLON
  101 primary_expression: IDENTIFIER . DEREF_OP IDENTIFIER
  102                   | IDENTIFIER .

    SEMI_COLON  shift, and go to state 26
    ASGN_OP     shift, and go to state 27
    DEREF_OP    shift, and go to state 29

    $default  reduce using rule 102 (primary_expression)


State 256

   17 body_or_proto: LEFT_CURLY statement_list RIGHT_CURLY .

    $default  reduce using rule 17 (body_or_proto)


State 257

   32 statement_list: Statement statement_list .

    $default  reduce using rule 32 (statement_list)


State 258

   48 Expression_statement: expression SEMI_COLON .

    $default  reduce using rule 48 (Expression_statement)


State 259

   19 argument_list: Dec_specifier IDENTIFIER COMMA argument_list .

    $default  reduce using rule 19 (argument_list)


State 260

  115 proc_arr_arg: LEFT_BRACKET cluster_list RIGHT_BRACKET .

    $default  reduce using rule 115 (proc_arr_arg)


State 261

  112 proc_arr_arg: PROCESSORS ASGN_OP IDENTIFIER .

    $default  reduce using rule 112 (proc_arr_arg)


State 262

  113 proc_arr_arg: PROCESSORS ASGN_OP LEFT_BRACKET . cluster_list RIGHT_BRACKET

    CLUSTER    shift, and go to state 30
    PROCESSOR  shift, and go to state 31

    cluster_object    go to state 147
    cluster_list      go to state 303
    processor_object  go to state 68


State 263

  118 topology_arg: TOPOLOGY . ASGN_OP STRING_LITERAL

    ASGN_OP  shift, and go to state 304


State 264

  119 topology_arg: STRING_LITERAL .

    $default  reduce using rule 119 (topology_arg)


State 265

  110 cluster_object: CLUSTER LEFT_PARENTHESIS proc_arr_arg COMMA topology_arg . COMMA link_band_arg COMMA link_cap_arg narp

    COMMA  shift, and go to state 305


State 266

  128 isa_args: ISA ASGN_OP PROC_TYPE .

    $default  reduce using rule 128 (isa_args)


State 267

  130 Clock_args: CLOCK_SPEED . ASGN_OP CONSTANT

    ASGN_OP  shift, and go to state 306


State 268

  131 Clock_args: CONSTANT .

    $default  reduce using rule 131 (Clock_args)


State 269

  127 processor_object: PROCESSOR LEFT_PARENTHESIS isa_args COMMA Clock_args . COMMA mem_args narp

    COMMA  shift, and go to state 307


State 270

  141 start_args: START_POINT ASGN_OP conditional_expression .

    $default  reduce using rule 141 (start_args)


State 271

  143 end_args: END_POINT . ASGN_OP conditional_expression

    ASGN_OP  shift, and go to state 308


State 272

  144 end_args: conditional_expression .

    $default  reduce using rule 144 (end_args)


State 273

  140 link_object: LINK LEFT_PARENTHESIS start_args COMMA end_args . COMMA link_band_arg COMMA link_cap_arg narp

    COMMA  shift, and go to state 309


State 274

  151 job_id_args: JOB_ID ASGN_OP conditional_expression .

    $default  reduce using rule 151 (job_id_args)


State 275

  153 flops_args: FLOPS_REQUIRED . ASGN_OP conditional_expression

    ASGN_OP  shift, and go to state 310


State 276

  154 flops_args: conditional_expression .

    $default  reduce using rule 154 (flops_args)


State 277

  150 job_object: JOB LEFT_PARENTHESIS job_id_args COMMA flops_args . COMMA deadline_args COMMA mem_required_args COMMA affinity_args RIGHT_PARENTHESIS

    COMMA  shift, and go to state 311


State 278

  116 cluster_list: cluster_object COMMA cluster_list .

    $default  reduce using rule 116 (cluster_list)


State 279

  186 job_list: IDENTIFIER COMMA job_list .

    $default  reduce using rule 186 (job_list)


State 280

  188 job_list: job_object COMMA job_list .

    $default  reduce using rule 188 (job_list)


State 281

  174 memory_function: GET_AVAILABLE_MEMORY LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 174 (memory_function)


State 282

  175 job_function: GET_JOB_AFFINITY LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 175 (job_function)


State 283

  176 job_function: GET_JOB_MEMORY LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 176 (job_function)


State 284

  177 job_function: GET_FLOPS LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 177 (job_function)


State 285

  178 job_function: GET_DEADLINE LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 178 (job_function)


State 286

  179 processor_function: IS_RUNNING LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 179 (processor_function)


State 287

  180 processor_function: SUBMIT_JOBS LEFT_PARENTHESIS job_list . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 312


State 288

  182 processor_function: GET_PROC_TYPE LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 182 (processor_function)


State 289

  183 processor_function: IS_PROCESSOR LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 183 (processor_function)


State 290

  101 primary_expression: IDENTIFIER . DEREF_OP IDENTIFIER
  102                   | IDENTIFIER .

    DEREF_OP  shift, and go to state 29

    $default  reduce using rule 102 (primary_expression)


State 291

  184 cluster_function: GET_PROCESSOR LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 184 (cluster_function)


State 292

  185 cluster_function: GET_PROCESSOR LEFT_PARENTHESIS primary_expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 313


State 293

  181 processor_function: GET_CLOCK_SPEED LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 181 (processor_function)


State 294

  146 mem_type_args: MEMORY_TYPE ASGN_OP MEM_TYPES .

    $default  reduce using rule 146 (mem_type_args)


State 295

  148 mem_size_args: MEMORY_SIZE . ASGN_OP conditional_expression

    ASGN_OP  shift, and go to state 314


State 296

  149 mem_size_args: conditional_expression .

    $default  reduce using rule 149 (mem_size_args)


State 297

  145 memory_object: MEMORY LEFT_PARENTHESIS mem_type_args COMMA mem_size_args . narp

    COMMA              shift, and go to state 315
    RIGHT_PARENTHESIS  shift, and go to state 316

    narp  go to state 317


State 298

   13 array_initialiser: LEFT_CURLY array_initialiser RIGHT_CURLY COMMA . array_initialiser

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_CURLY        shift, and go to state 121
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    array_initialiser          go to state 318
    expression                 go to state 123
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 299

   46 Iteration_statement: FOR LEFT_PARENTHESIS Expression_statement . Expression_statement RIGHT_PARENTHESIS Statement
   47                    | FOR LEFT_PARENTHESIS Expression_statement . Expression_statement expression RIGHT_PARENTHESIS Statement

    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    SEMI_COLON        shift, and go to state 205
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    Expression_statement       go to state 319
    expression                 go to state 215
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 300

   43 Selection_statement: IF LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY ELSE LEFT_CURLY statement_list RIGHT_CURLY
   44                    | IF LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY

    RIGHT_PARENTHESIS  shift, and go to state 320


State 301

   45 Iteration_statement: WHILE LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS Statement

    RIGHT_PARENTHESIS  shift, and go to state 321


State 302

   34 Statement: LEFT_CURLY statement_list RIGHT_CURLY .

    $default  reduce using rule 34 (Statement)


State 303

  113 proc_arr_arg: PROCESSORS ASGN_OP LEFT_BRACKET cluster_list . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 322


State 304

  118 topology_arg: TOPOLOGY ASGN_OP . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 323


State 305

  110 cluster_object: CLUSTER LEFT_PARENTHESIS proc_arr_arg COMMA topology_arg COMMA . link_band_arg COMMA link_cap_arg narp

    LINK_BANDWIDTH    shift, and go to state 324
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 325
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    link_band_arg              go to state 326
    function_expression        go to state 72


State 306

  130 Clock_args: CLOCK_SPEED ASGN_OP . CONSTANT

    CONSTANT  shift, and go to state 327


State 307

  127 processor_object: PROCESSOR LEFT_PARENTHESIS isa_args COMMA Clock_args COMMA . mem_args narp

    MEM1        shift, and go to state 328
    IDENTIFIER  shift, and go to state 329
    MEMORY      shift, and go to state 47

    mem_args       go to state 330
    memory         go to state 331
    memory_object  go to state 332


State 308

  143 end_args: END_POINT ASGN_OP . conditional_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 333
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 309

  140 link_object: LINK LEFT_PARENTHESIS start_args COMMA end_args COMMA . link_band_arg COMMA link_cap_arg narp

    LINK_BANDWIDTH    shift, and go to state 324
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 325
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    link_band_arg              go to state 334
    function_expression        go to state 72


State 310

  153 flops_args: FLOPS_REQUIRED ASGN_OP . conditional_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 335
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 311

  150 job_object: JOB LEFT_PARENTHESIS job_id_args COMMA flops_args COMMA . deadline_args COMMA mem_required_args COMMA affinity_args RIGHT_PARENTHESIS

    DEADLINE          shift, and go to state 336
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 337
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    deadline_args              go to state 338
    function_expression        go to state 72


State 312

  180 processor_function: SUBMIT_JOBS LEFT_PARENTHESIS job_list RIGHT_PARENTHESIS .

    $default  reduce using rule 180 (processor_function)


State 313

  185 cluster_function: GET_PROCESSOR LEFT_PARENTHESIS primary_expression RIGHT_PARENTHESIS .

    $default  reduce using rule 185 (cluster_function)


State 314

  148 mem_size_args: MEMORY_SIZE ASGN_OP . conditional_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 339
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 315

  124 narp: COMMA . conditional_expression RIGHT_PARENTHESIS
  125     | COMMA . NAME ASGN_OP conditional_expression RIGHT_PARENTHESIS

    NAME              shift, and go to state 340
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 341
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 316

  126 narp: RIGHT_PARENTHESIS .

    $default  reduce using rule 126 (narp)


State 317

  145 memory_object: MEMORY LEFT_PARENTHESIS mem_type_args COMMA mem_size_args narp .

    $default  reduce using rule 145 (memory_object)


State 318

   13 array_initialiser: LEFT_CURLY array_initialiser RIGHT_CURLY COMMA array_initialiser .

    $default  reduce using rule 13 (array_initialiser)


State 319

   46 Iteration_statement: FOR LEFT_PARENTHESIS Expression_statement Expression_statement . RIGHT_PARENTHESIS Statement
   47                    | FOR LEFT_PARENTHESIS Expression_statement Expression_statement . expression RIGHT_PARENTHESIS Statement

    CLUSTER            shift, and go to state 30
    PROCESSOR          shift, and go to state 31
    LINK               shift, and go to state 32
    JOB                shift, and go to state 33
    RUN                shift, and go to state 34
    WAIT               shift, and go to state 35
    DISCARD_JOB        shift, and go to state 36
    STOP               shift, and go to state 37
    IDENTIFIER         shift, and go to state 38
    CONSTANT           shift, and go to state 18
    STRING_LITERAL     shift, and go to state 19
    INC_OP             shift, and go to state 39
    DEC_OP             shift, and go to state 40
    LEFT_PARENTHESIS   shift, and go to state 20
    RIGHT_PARENTHESIS  shift, and go to state 342
    AMPERSAND          shift, and go to state 41
    NOT_OP             shift, and go to state 42
    BTW_NOT            shift, and go to state 43
    MINUS              shift, and go to state 44
    PLUS               shift, and go to state 45
    MUL_OP             shift, and go to state 46
    MEMORY             shift, and go to state 47

    expression                 go to state 343
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 320

   43 Selection_statement: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS . LEFT_CURLY statement_list RIGHT_CURLY ELSE LEFT_CURLY statement_list RIGHT_CURLY
   44                    | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS . LEFT_CURLY statement_list RIGHT_CURLY

    LEFT_CURLY  shift, and go to state 344


State 321

   45 Iteration_statement: WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS . Statement

    BREAK             shift, and go to state 199
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 200
    FLOAT             shift, and go to state 2
    FOR               shift, and go to state 201
    IF                shift, and go to state 202
    INT               shift, and go to state 3
    RETURN            shift, and go to state 203
    VOID              shift, and go to state 4
    WHILE             shift, and go to state 204
    PROC              shift, and go to state 5
    LNK               shift, and go to state 6
    JB                shift, and go to state 7
    CLUST             shift, and go to state 8
    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    MEM               shift, and go to state 9
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    SEMI_COLON        shift, and go to state 205
    LEFT_CURLY        shift, and go to state 206
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    Object_declaration         go to state 207
    Dec_specifier              go to state 208
    type_specifier             go to state 14
    Statement                  go to state 345
    Jump_statement             go to state 211
    Selection_statement        go to state 212
    Iteration_statement        go to state 213
    Expression_statement       go to state 214
    expression                 go to state 215
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 322

  113 proc_arr_arg: PROCESSORS ASGN_OP LEFT_BRACKET cluster_list RIGHT_BRACKET .

    $default  reduce using rule 113 (proc_arr_arg)


State 323

  118 topology_arg: TOPOLOGY ASGN_OP STRING_LITERAL .

    $default  reduce using rule 118 (topology_arg)


State 324

  120 link_band_arg: LINK_BANDWIDTH . ASGN_OP conditional_expression

    ASGN_OP  shift, and go to state 346


State 325

  121 link_band_arg: conditional_expression .

    $default  reduce using rule 121 (link_band_arg)


State 326

  110 cluster_object: CLUSTER LEFT_PARENTHESIS proc_arr_arg COMMA topology_arg COMMA link_band_arg . COMMA link_cap_arg narp

    COMMA  shift, and go to state 347


State 327

  130 Clock_args: CLOCK_SPEED ASGN_OP CONSTANT .

    $default  reduce using rule 130 (Clock_args)


State 328

  132 mem_args: MEM1 . ASGN_OP memory COLON MEM2 ASGN_OP memory
  133         | MEM1 . ASGN_OP memory COLON memory
  134         | MEM1 . ASGN_OP memory

    ASGN_OP  shift, and go to state 348


State 329

  139 memory: IDENTIFIER .

    $default  reduce using rule 139 (memory)


State 330

  127 processor_object: PROCESSOR LEFT_PARENTHESIS isa_args COMMA Clock_args COMMA mem_args . narp

    COMMA              shift, and go to state 315
    RIGHT_PARENTHESIS  shift, and go to state 316

    narp  go to state 349


State 331

  135 mem_args: memory . COLON MEM2 ASGN_OP memory
  136         | memory . COLON memory
  137         | memory .

    COLON  shift, and go to state 350

    $default  reduce using rule 137 (mem_args)


State 332

  138 memory: memory_object .

    $default  reduce using rule 138 (memory)


State 333

  143 end_args: END_POINT ASGN_OP conditional_expression .

    $default  reduce using rule 143 (end_args)


State 334

  140 link_object: LINK LEFT_PARENTHESIS start_args COMMA end_args COMMA link_band_arg . COMMA link_cap_arg narp

    COMMA  shift, and go to state 351


State 335

  153 flops_args: FLOPS_REQUIRED ASGN_OP conditional_expression .

    $default  reduce using rule 153 (flops_args)


State 336

  155 deadline_args: DEADLINE . ASGN_OP conditional_expression

    ASGN_OP  shift, and go to state 352


State 337

  156 deadline_args: conditional_expression .

    $default  reduce using rule 156 (deadline_args)


State 338

  150 job_object: JOB LEFT_PARENTHESIS job_id_args COMMA flops_args COMMA deadline_args . COMMA mem_required_args COMMA affinity_args RIGHT_PARENTHESIS

    COMMA  shift, and go to state 353


State 339

  148 mem_size_args: MEMORY_SIZE ASGN_OP conditional_expression .

    $default  reduce using rule 148 (mem_size_args)


State 340

  125 narp: COMMA NAME . ASGN_OP conditional_expression RIGHT_PARENTHESIS

    ASGN_OP  shift, and go to state 354


State 341

  124 narp: COMMA conditional_expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 355


State 342

   46 Iteration_statement: FOR LEFT_PARENTHESIS Expression_statement Expression_statement RIGHT_PARENTHESIS . Statement

    BREAK             shift, and go to state 199
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 200
    FLOAT             shift, and go to state 2
    FOR               shift, and go to state 201
    IF                shift, and go to state 202
    INT               shift, and go to state 3
    RETURN            shift, and go to state 203
    VOID              shift, and go to state 4
    WHILE             shift, and go to state 204
    PROC              shift, and go to state 5
    LNK               shift, and go to state 6
    JB                shift, and go to state 7
    CLUST             shift, and go to state 8
    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    MEM               shift, and go to state 9
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    SEMI_COLON        shift, and go to state 205
    LEFT_CURLY        shift, and go to state 206
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    Object_declaration         go to state 207
    Dec_specifier              go to state 208
    type_specifier             go to state 14
    Statement                  go to state 356
    Jump_statement             go to state 211
    Selection_statement        go to state 212
    Iteration_statement        go to state 213
    Expression_statement       go to state 214
    expression                 go to state 215
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 343

   47 Iteration_statement: FOR LEFT_PARENTHESIS Expression_statement Expression_statement expression . RIGHT_PARENTHESIS Statement

    RIGHT_PARENTHESIS  shift, and go to state 357


State 344

   43 Selection_statement: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY . statement_list RIGHT_CURLY ELSE LEFT_CURLY statement_list RIGHT_CURLY
   44                    | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY . statement_list RIGHT_CURLY

    BREAK             shift, and go to state 199
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 200
    FLOAT             shift, and go to state 2
    FOR               shift, and go to state 201
    IF                shift, and go to state 202
    INT               shift, and go to state 3
    RETURN            shift, and go to state 203
    VOID              shift, and go to state 4
    WHILE             shift, and go to state 204
    PROC              shift, and go to state 5
    LNK               shift, and go to state 6
    JB                shift, and go to state 7
    CLUST             shift, and go to state 8
    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    MEM               shift, and go to state 9
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    SEMI_COLON        shift, and go to state 205
    LEFT_CURLY        shift, and go to state 206
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    Object_declaration         go to state 207
    Dec_specifier              go to state 208
    type_specifier             go to state 14
    statement_list             go to state 358
    Statement                  go to state 210
    Jump_statement             go to state 211
    Selection_statement        go to state 212
    Iteration_statement        go to state 213
    Expression_statement       go to state 214
    expression                 go to state 215
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 345

   45 Iteration_statement: WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS Statement .

    $default  reduce using rule 45 (Iteration_statement)


State 346

  120 link_band_arg: LINK_BANDWIDTH ASGN_OP . conditional_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 359
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 347

  110 cluster_object: CLUSTER LEFT_PARENTHESIS proc_arr_arg COMMA topology_arg COMMA link_band_arg COMMA . link_cap_arg narp

    LINK_CAPACITY     shift, and go to state 360
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 361
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    link_cap_arg               go to state 362
    function_expression        go to state 72


State 348

  132 mem_args: MEM1 ASGN_OP . memory COLON MEM2 ASGN_OP memory
  133         | MEM1 ASGN_OP . memory COLON memory
  134         | MEM1 ASGN_OP . memory

    IDENTIFIER  shift, and go to state 329
    MEMORY      shift, and go to state 47

    memory         go to state 363
    memory_object  go to state 332


State 349

  127 processor_object: PROCESSOR LEFT_PARENTHESIS isa_args COMMA Clock_args COMMA mem_args narp .

    $default  reduce using rule 127 (processor_object)


State 350

  135 mem_args: memory COLON . MEM2 ASGN_OP memory
  136         | memory COLON . memory

    MEM2        shift, and go to state 364
    IDENTIFIER  shift, and go to state 329
    MEMORY      shift, and go to state 47

    memory         go to state 365
    memory_object  go to state 332


State 351

  140 link_object: LINK LEFT_PARENTHESIS start_args COMMA end_args COMMA link_band_arg COMMA . link_cap_arg narp

    LINK_CAPACITY     shift, and go to state 360
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 361
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    link_cap_arg               go to state 366
    function_expression        go to state 72


State 352

  155 deadline_args: DEADLINE ASGN_OP . conditional_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 367
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 353

  150 job_object: JOB LEFT_PARENTHESIS job_id_args COMMA flops_args COMMA deadline_args COMMA . mem_required_args COMMA affinity_args RIGHT_PARENTHESIS

    MEM_REQUIRED      shift, and go to state 368
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 369
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    mem_required_args          go to state 370
    function_expression        go to state 72


State 354

  125 narp: COMMA NAME ASGN_OP . conditional_expression RIGHT_PARENTHESIS

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 371
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 355

  124 narp: COMMA conditional_expression RIGHT_PARENTHESIS .

    $default  reduce using rule 124 (narp)


State 356

   46 Iteration_statement: FOR LEFT_PARENTHESIS Expression_statement Expression_statement RIGHT_PARENTHESIS Statement .

    $default  reduce using rule 46 (Iteration_statement)


State 357

   47 Iteration_statement: FOR LEFT_PARENTHESIS Expression_statement Expression_statement expression RIGHT_PARENTHESIS . Statement

    BREAK             shift, and go to state 199
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 200
    FLOAT             shift, and go to state 2
    FOR               shift, and go to state 201
    IF                shift, and go to state 202
    INT               shift, and go to state 3
    RETURN            shift, and go to state 203
    VOID              shift, and go to state 4
    WHILE             shift, and go to state 204
    PROC              shift, and go to state 5
    LNK               shift, and go to state 6
    JB                shift, and go to state 7
    CLUST             shift, and go to state 8
    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    MEM               shift, and go to state 9
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    SEMI_COLON        shift, and go to state 205
    LEFT_CURLY        shift, and go to state 206
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    Object_declaration         go to state 207
    Dec_specifier              go to state 208
    type_specifier             go to state 14
    Statement                  go to state 372
    Jump_statement             go to state 211
    Selection_statement        go to state 212
    Iteration_statement        go to state 213
    Expression_statement       go to state 214
    expression                 go to state 215
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 358

   43 Selection_statement: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list . RIGHT_CURLY ELSE LEFT_CURLY statement_list RIGHT_CURLY
   44                    | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list . RIGHT_CURLY

    RIGHT_CURLY  shift, and go to state 373


State 359

  120 link_band_arg: LINK_BANDWIDTH ASGN_OP conditional_expression .

    $default  reduce using rule 120 (link_band_arg)


State 360

  122 link_cap_arg: LINK_CAPACITY . ASGN_OP conditional_expression

    ASGN_OP  shift, and go to state 374


State 361

  123 link_cap_arg: conditional_expression .

    $default  reduce using rule 123 (link_cap_arg)


State 362

  110 cluster_object: CLUSTER LEFT_PARENTHESIS proc_arr_arg COMMA topology_arg COMMA link_band_arg COMMA link_cap_arg . narp

    COMMA              shift, and go to state 315
    RIGHT_PARENTHESIS  shift, and go to state 316

    narp  go to state 375


State 363

  132 mem_args: MEM1 ASGN_OP memory . COLON MEM2 ASGN_OP memory
  133         | MEM1 ASGN_OP memory . COLON memory
  134         | MEM1 ASGN_OP memory .

    COLON  shift, and go to state 376

    $default  reduce using rule 134 (mem_args)


State 364

  135 mem_args: memory COLON MEM2 . ASGN_OP memory

    ASGN_OP  shift, and go to state 377


State 365

  136 mem_args: memory COLON memory .

    $default  reduce using rule 136 (mem_args)


State 366

  140 link_object: LINK LEFT_PARENTHESIS start_args COMMA end_args COMMA link_band_arg COMMA link_cap_arg . narp

    COMMA              shift, and go to state 315
    RIGHT_PARENTHESIS  shift, and go to state 316

    narp  go to state 378


State 367

  155 deadline_args: DEADLINE ASGN_OP conditional_expression .

    $default  reduce using rule 155 (deadline_args)


State 368

  157 mem_required_args: MEM_REQUIRED . ASGN_OP conditional_expression

    ASGN_OP  shift, and go to state 379


State 369

  158 mem_required_args: conditional_expression .

    $default  reduce using rule 158 (mem_required_args)


State 370

  150 job_object: JOB LEFT_PARENTHESIS job_id_args COMMA flops_args COMMA deadline_args COMMA mem_required_args . COMMA affinity_args RIGHT_PARENTHESIS

    COMMA  shift, and go to state 380


State 371

  125 narp: COMMA NAME ASGN_OP conditional_expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 381


State 372

   47 Iteration_statement: FOR LEFT_PARENTHESIS Expression_statement Expression_statement expression RIGHT_PARENTHESIS Statement .

    $default  reduce using rule 47 (Iteration_statement)


State 373

   43 Selection_statement: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY . ELSE LEFT_CURLY statement_list RIGHT_CURLY
   44                    | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY .

    ELSE  shift, and go to state 382

    $default  reduce using rule 44 (Selection_statement)


State 374

  122 link_cap_arg: LINK_CAPACITY ASGN_OP . conditional_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 383
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 375

  110 cluster_object: CLUSTER LEFT_PARENTHESIS proc_arr_arg COMMA topology_arg COMMA link_band_arg COMMA link_cap_arg narp .

    $default  reduce using rule 110 (cluster_object)


State 376

  132 mem_args: MEM1 ASGN_OP memory COLON . MEM2 ASGN_OP memory
  133         | MEM1 ASGN_OP memory COLON . memory

    MEM2        shift, and go to state 384
    IDENTIFIER  shift, and go to state 329
    MEMORY      shift, and go to state 47

    memory         go to state 385
    memory_object  go to state 332


State 377

  135 mem_args: memory COLON MEM2 ASGN_OP . memory

    IDENTIFIER  shift, and go to state 329
    MEMORY      shift, and go to state 47

    memory         go to state 386
    memory_object  go to state 332


State 378

  140 link_object: LINK LEFT_PARENTHESIS start_args COMMA end_args COMMA link_band_arg COMMA link_cap_arg narp .

    $default  reduce using rule 140 (link_object)


State 379

  157 mem_required_args: MEM_REQUIRED ASGN_OP . conditional_expression

    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46

    conditional_expression     go to state 387
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 142
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    function_expression        go to state 72


State 380

  150 job_object: JOB LEFT_PARENTHESIS job_id_args COMMA flops_args COMMA deadline_args COMMA mem_required_args COMMA . affinity_args RIGHT_PARENTHESIS

    AFFINITY      shift, and go to state 388
    LEFT_BRACKET  shift, and go to state 389

    affinity_args  go to state 390


State 381

  125 narp: COMMA NAME ASGN_OP conditional_expression RIGHT_PARENTHESIS .

    $default  reduce using rule 125 (narp)


State 382

   43 Selection_statement: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY ELSE . LEFT_CURLY statement_list RIGHT_CURLY

    LEFT_CURLY  shift, and go to state 391


State 383

  122 link_cap_arg: LINK_CAPACITY ASGN_OP conditional_expression .

    $default  reduce using rule 122 (link_cap_arg)


State 384

  132 mem_args: MEM1 ASGN_OP memory COLON MEM2 . ASGN_OP memory

    ASGN_OP  shift, and go to state 392


State 385

  133 mem_args: MEM1 ASGN_OP memory COLON memory .

    $default  reduce using rule 133 (mem_args)


State 386

  135 mem_args: memory COLON MEM2 ASGN_OP memory .

    $default  reduce using rule 135 (mem_args)


State 387

  157 mem_required_args: MEM_REQUIRED ASGN_OP conditional_expression .

    $default  reduce using rule 157 (mem_required_args)


State 388

  159 affinity_args: AFFINITY . ASGN_OP LEFT_BRACKET list RIGHT_BRACKET

    ASGN_OP  shift, and go to state 393


State 389

  160 affinity_args: LEFT_BRACKET . list RIGHT_BRACKET

    CONSTANT  shift, and go to state 394

    list  go to state 395


State 390

  150 job_object: JOB LEFT_PARENTHESIS job_id_args COMMA flops_args COMMA deadline_args COMMA mem_required_args COMMA affinity_args . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 396


State 391

   43 Selection_statement: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY ELSE LEFT_CURLY . statement_list RIGHT_CURLY

    BREAK             shift, and go to state 199
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 200
    FLOAT             shift, and go to state 2
    FOR               shift, and go to state 201
    IF                shift, and go to state 202
    INT               shift, and go to state 3
    RETURN            shift, and go to state 203
    VOID              shift, and go to state 4
    WHILE             shift, and go to state 204
    PROC              shift, and go to state 5
    LNK               shift, and go to state 6
    JB                shift, and go to state 7
    CLUST             shift, and go to state 8
    CLUSTER           shift, and go to state 30
    PROCESSOR         shift, and go to state 31
    LINK              shift, and go to state 32
    JOB               shift, and go to state 33
    RUN               shift, and go to state 34
    WAIT              shift, and go to state 35
    DISCARD_JOB       shift, and go to state 36
    STOP              shift, and go to state 37
    MEM               shift, and go to state 9
    IDENTIFIER        shift, and go to state 38
    CONSTANT          shift, and go to state 18
    STRING_LITERAL    shift, and go to state 19
    INC_OP            shift, and go to state 39
    DEC_OP            shift, and go to state 40
    SEMI_COLON        shift, and go to state 205
    LEFT_CURLY        shift, and go to state 206
    LEFT_PARENTHESIS  shift, and go to state 20
    AMPERSAND         shift, and go to state 41
    NOT_OP            shift, and go to state 42
    BTW_NOT           shift, and go to state 43
    MINUS             shift, and go to state 44
    PLUS              shift, and go to state 45
    MUL_OP            shift, and go to state 46
    MEMORY            shift, and go to state 47

    Object_declaration         go to state 207
    Dec_specifier              go to state 208
    type_specifier             go to state 14
    statement_list             go to state 397
    Statement                  go to state 210
    Jump_statement             go to state 211
    Selection_statement        go to state 212
    Iteration_statement        go to state 213
    Expression_statement       go to state 214
    expression                 go to state 215
    assignment_expression      go to state 49
    conditional_expression     go to state 50
    logical_or_expression      go to state 51
    logical_and_expression     go to state 52
    bitwise_or_expression      go to state 53
    bitwise_xor_expression     go to state 54
    and_expression             go to state 55
    equality_expression        go to state 56
    relational_expression      go to state 57
    shift_expression           go to state 58
    additive_expression        go to state 59
    multiplicative_expression  go to state 60
    unary_expression           go to state 61
    unary_operator             go to state 62
    postfix_expression         go to state 63
    array_expression           go to state 64
    primary_expression         go to state 65
    object_expression          go to state 66
    cluster_object             go to state 67
    processor_object           go to state 68
    link_object                go to state 69
    memory_object              go to state 70
    job_object                 go to state 71
    function_expression        go to state 72


State 392

  132 mem_args: MEM1 ASGN_OP memory COLON MEM2 ASGN_OP . memory

    IDENTIFIER  shift, and go to state 329
    MEMORY      shift, and go to state 47

    memory         go to state 398
    memory_object  go to state 332


State 393

  159 affinity_args: AFFINITY ASGN_OP . LEFT_BRACKET list RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 399


State 394

  161 list: CONSTANT .
  162     | CONSTANT . COMMA list

    COMMA  shift, and go to state 400

    $default  reduce using rule 161 (list)


State 395

  160 affinity_args: LEFT_BRACKET list . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 401


State 396

  150 job_object: JOB LEFT_PARENTHESIS job_id_args COMMA flops_args COMMA deadline_args COMMA mem_required_args COMMA affinity_args RIGHT_PARENTHESIS .

    $default  reduce using rule 150 (job_object)


State 397

   43 Selection_statement: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY ELSE LEFT_CURLY statement_list . RIGHT_CURLY

    RIGHT_CURLY  shift, and go to state 402


State 398

  132 mem_args: MEM1 ASGN_OP memory COLON MEM2 ASGN_OP memory .

    $default  reduce using rule 132 (mem_args)


State 399

  159 affinity_args: AFFINITY ASGN_OP LEFT_BRACKET . list RIGHT_BRACKET

    CONSTANT  shift, and go to state 394

    list  go to state 403


State 400

  162 list: CONSTANT COMMA . list

    CONSTANT  shift, and go to state 394

    list  go to state 404


State 401

  160 affinity_args: LEFT_BRACKET list RIGHT_BRACKET .

    $default  reduce using rule 160 (affinity_args)


State 402

   43 Selection_statement: IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CURLY statement_list RIGHT_CURLY ELSE LEFT_CURLY statement_list RIGHT_CURLY .

    $default  reduce using rule 43 (Selection_statement)


State 403

  159 affinity_args: AFFINITY ASGN_OP LEFT_BRACKET list . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 405


State 404

  162 list: CONSTANT COMMA list .

    $default  reduce using rule 162 (list)


State 405

  159 affinity_args: AFFINITY ASGN_OP LEFT_BRACKET list RIGHT_BRACKET .

    $default  reduce using rule 159 (affinity_args)
